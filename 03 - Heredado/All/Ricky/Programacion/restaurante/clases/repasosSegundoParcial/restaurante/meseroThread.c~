#include "stdlib.h"
#include "stdio.h"
#include "string.h"

#include "time.h"
#include "unistd.h"

#include "sys/ipc.h"
#include "sys/shm.h"
#include "pthread.h"

#include "def.h"
#include "funciones.h"
#include "archivo.h"
#include "claves.h"
#include "semaforos.h"
#include "memoria.h"
#include "global.h"
#include "cola.h"

void *meseroThread(void *parametro){

	int nro_mesero;
	int id_memoria;
	char cadena[50];
	int evento;
	int postre;
	int cont;
	int id_cola_mensajes;
	int done;
	mesero *datos_thread;

	done=0;
	cont=0;
	evento=0;
	

	datos_thread=(mesero*) parametro;
	nro_mesero = datos_thread->nro_mesero;
	id_cola_mensajes = datos_thread -> id_cola_mensajes;
	srand(time(NULL));
	borrar_mensajes(id_cola_mensajes);
	
	
	while(done==0)
	{
		pthread_mutex_lock(&mutex);	
				
				
					evento = inDevolverAleatorio(1,3);
					postre = inDevolverAleatorio(0,1);
					printf("\n-------------------------------------------");
					printf("\nEl mesero %d recibio un pedido del menu %d",(nro_mesero+1),evento);
					
					if(postre==1)
					{
						printf("\nEl pedido incluye postre\n");
						sprintf(cadena,"%d",postre);
					}
					printf("\n-------------------------------------------\n");
					enviar_mensaje(id_cola_mensajes,MSG_PANEL,MSG_MESERO+nro_mesero,evento,cadena);
					cont++;
					if(cont >= 5)
					{
						printf("\n**************************");
						printf("\nEl mesero: %d termino su trabajo",nro_mesero+1);
						printf("\n**************************\n");
						done=1;
						enviar_mensaje(id_cola_mensajes,MSG_PANEL,MSG_MESERO+nro_mesero,EVT_FIN,"finalizar");
						
					}
					evento=0;
					memset(cadena,0,sizeof(cadena));
					
				usleep(1000*500);
				pthread_mutex_unlock(&mutex);
				
				
																					
		
		
	}
	usleep(1000*500);
	pthread_exit((void *)"Listo");
	

}
